<!DOCTYPE html>
<html lan="en">

<head>
    <% include ../partials/head %>
    <link rel="stylesheet" href="/css/signup.css">
</head>

<body>
<% include ../partials/header %>

<div ng-app="signup" ng-controller="signupCtrl" class="container">
    <div class="row">
        <div class="panel panel-primary">
            <div class="panel-body">

            </div>
        </div>
    </div>
</div>

<% include ../partials/footer %>

<script>
    (function(angular) {
        'use strict';
        var app = angular.module('signup', []);

        app.controller('signupCtrl', ['$window', '$scope', '$http', function ($window, $scope, $http) {
            $scope.master = {};

            $http.get("api/v1/users").then(function(response) {
                $scope.signup = response.data.data;

                $scope.usernames = [];
                for (var i = 0; i < response.data.data.length; i++) {
                    $scope.usernames.push(response.data.data[i].username);
                }

                $scope.create = function(user) {
                    $http.post("api/v1/users", user).then(function(response) {
                        /* Redirect after user is created */
                        $window.location.href = '/';
                    });
                }
            });

            $scope.create = function (user) {
                $scope.master = angular.copy(user);
            };
        }]);

        app.directive('usernameDir', function ($q, $timeout) {
            return {
                require: 'ngModel',
                link: function (scope, elm, attrs, ctrl) {
                    ctrl.$asyncValidators.usernameAuth = function (modelValue, viewValue) {

                        if (ctrl.$isEmpty(modelValue)) {
                            // consider empty model valid
                            return $q.when();
                        }

                        var def = $q.defer();

                        $timeout(function () {
                            // Mock a delayed response
                            if (scope.usernames.indexOf(modelValue) === -1) {
                                // The username is available
                                def.resolve();
                            } else {
                                def.reject();
                            }

                        }, 300);

                        return def.promise;
                    };
                }
            };
        });

    })(window.angular);

</script>
</body>
</html>
